/*
  Licensed under the Apache License, Version 2.0
    http://www.apache.org/licenses/LICENSE-2.0.html

  AUTOGENERATED BY H2O at 2021-10-01T13:18:27.371-04:00
  3.34.0.1
  
  Standalone prediction code with sample test data for DRFModel named DRF_model_python_1633108695693_1

  How to download, compile and execute:
      mkdir tmpdir
      cd tmpdir
      curl http://127.0.0.1:54321/3/h2o-genmodel.jar > h2o-genmodel.jar
      curl http://127.0.0.1:54321/3/Models.java/DRF_model_python_1633108695693_1 > DRF_model_python_1633108695693_1.java
      javac -cp h2o-genmodel.jar -J-Xmx2g -J-XX:MaxPermSize=128m DRF_model_python_1633108695693_1.java

     (Note:  Try java argument -XX:+PrintCompilation to show runtime JIT compiler behavior.)
*/
import java.util.Map;
import hex.genmodel.GenModel;
import hex.genmodel.annotations.ModelPojo;

@ModelPojo(name="DRF_model_python_1633108695693_1", algorithm="drf")
public class DRF_model_python_1633108695693_1 extends GenModel {
  public hex.ModelCategory getModelCategory() { return hex.ModelCategory.Regression; }

  public boolean isSupervised() { return true; }
  public int nfeatures() { return 33; }
  public int nclasses() { return 1; }

  // Names of columns used by model.
  public static final String[] NAMES = NamesHolder_DRF_model_python_1633108695693_1.VALUES;

  // Column domains. The last array contains domain of response column.
  public static final String[][] DOMAINS = new String[][] {
    /* TPA(ADJ)_fr */ null,
    /* AVG_fr */ null,
    /* OBP_fr */ null,
    /* SLG_fr */ null,
    /* OPS_fr */ null,
    /* ISO_fr */ null,
    /* HRPA_fr */ null,
    /* BBPA_fr */ null,
    /* SOPA_fr */ null,
    /* KW_fr */ null,
    /* XBH/AB_fr */ null,
    /* TPA(ADJ)_so */ null,
    /* AVG_so */ null,
    /* OBP_so */ null,
    /* SLG_so */ null,
    /* OPS_so */ null,
    /* ISO_so */ null,
    /* HRPA_so */ null,
    /* BBPA_so */ null,
    /* SOPA_so */ null,
    /* KW_so */ null,
    /* XBH/AB_so */ null,
    /* TPA(ADJ)_jr */ null,
    /* AVG_jr */ null,
    /* OBP_jr */ null,
    /* SLG_jr */ null,
    /* OPS_jr */ null,
    /* ISO_jr */ null,
    /* HRPA_jr */ null,
    /* BBPA_jr */ null,
    /* SOPA_jr */ null,
    /* KW_jr */ null,
    /* XBH/AB_jr */ null,
    /* Grade 2014 */ null
  };
  // Prior class distribution
  public static final double[] PRIOR_CLASS_DISTRIB = {1.0};
  // Class distribution used for model building
  public static final double[] MODEL_CLASS_DISTRIB = {1.0};

  public DRF_model_python_1633108695693_1() { super(NAMES,DOMAINS,"Grade 2014"); }
  public String getUUID() { return Long.toString(6583538531213496576L); }

  // Pass in data in a double[], pre-aligned to the Model's requirements.
  // Jam predictions into the preds[] array; preds[0] is reserved for the
  // main prediction (class for classifiers or value for regression),
  // and remaining columns hold a probability distribution for classifiers.
  public final double[] score0( double[] data, double[] preds ) {
    java.util.Arrays.fill(preds,0);
    DRF_model_python_1633108695693_1_Forest_0.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_1.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_2.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_3.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_4.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_5.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_6.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_7.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_8.score0(data,preds);
    DRF_model_python_1633108695693_1_Forest_9.score0(data,preds);
    preds[0] /= 10;
    return preds;
  }
}
// The class representing training column names
class NamesHolder_DRF_model_python_1633108695693_1 implements java.io.Serializable {
  public static final String[] VALUES = new String[33];
  static {
    NamesHolder_DRF_model_python_1633108695693_1_0.fill(VALUES);
  }
  static final class NamesHolder_DRF_model_python_1633108695693_1_0 implements java.io.Serializable {
    static final void fill(String[] sa) {
      sa[0] = "TPA(ADJ)_fr";
      sa[1] = "AVG_fr";
      sa[2] = "OBP_fr";
      sa[3] = "SLG_fr";
      sa[4] = "OPS_fr";
      sa[5] = "ISO_fr";
      sa[6] = "HRPA_fr";
      sa[7] = "BBPA_fr";
      sa[8] = "SOPA_fr";
      sa[9] = "KW_fr";
      sa[10] = "XBH/AB_fr";
      sa[11] = "TPA(ADJ)_so";
      sa[12] = "AVG_so";
      sa[13] = "OBP_so";
      sa[14] = "SLG_so";
      sa[15] = "OPS_so";
      sa[16] = "ISO_so";
      sa[17] = "HRPA_so";
      sa[18] = "BBPA_so";
      sa[19] = "SOPA_so";
      sa[20] = "KW_so";
      sa[21] = "XBH/AB_so";
      sa[22] = "TPA(ADJ)_jr";
      sa[23] = "AVG_jr";
      sa[24] = "OBP_jr";
      sa[25] = "SLG_jr";
      sa[26] = "OPS_jr";
      sa[27] = "ISO_jr";
      sa[28] = "HRPA_jr";
      sa[29] = "BBPA_jr";
      sa[30] = "SOPA_jr";
      sa[31] = "KW_jr";
      sa[32] = "XBH/AB_jr";
    }
  }
}

class DRF_model_python_1633108695693_1_Forest_0 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_0_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_0_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 1.4010179f ? 
         (Double.isNaN(data[16]) || data[16 /* ISO_so */] < 0.26110497f ? 
             (Double.isNaN(data[29]) || data[29 /* BBPA_jr */] < 0.13075079f ? 
                 (Double.isNaN(data[14]) || data[14 /* SLG_so */] < 0.62141573f ? 
                     (Double.isNaN(data[3]) || data[3 /* SLG_fr */] < 0.42601067f ? 
                        20.723982f : 
                        22.474226f) : 
                     (Double.isNaN(data[2]) || data[2 /* OBP_fr */] < 0.417509f ? 
                        22.727272f : 
                        35.0f)) : 
                 (data[26 /* OPS_jr */] < 1.0146533f ? 
                     (data[7 /* BBPA_fr */] < 0.0792314f ? 
                        25.833334f : 
                        21.829268f) : 
                     (data[27 /* ISO_jr */] < 0.23542856f ? 
                        32.88889f : 
                        25.263159f))) : 
             (Double.isNaN(data[31]) || data[31 /* KW_jr */] < 1.2530053f ? 
                 (Double.isNaN(data[28]) || data[28 /* HRPA_jr */] < 0.074018806f ? 
                     (data[5 /* ISO_fr */] < 0.16130227f ? 
                        25.333334f : 
                        36.666668f) : 
                    49.0f) : 
                 (data[25 /* SLG_jr */] < 0.59144926f ? 
                    28.333334f : 
                    21.052631f))) : 
         (data[8 /* SOPA_fr */] < 0.106702395f ? 
            60.0f : 
            52.0f));
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_1 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_1_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_1_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.8287588f ? 
         (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.5540761f ? 
             (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 227.5f ? 
                 (data[7 /* BBPA_fr */] < 0.0792314f ? 
                     (Double.isNaN(data[29]) || data[29 /* BBPA_jr */] < 0.1135025f ? 
                        20.76923f : 
                        27.0f) : 
                     (data[19 /* SOPA_so */] < 0.09711429f ? 
                        21.428572f : 
                        20.09901f)) : 
                 (Double.isNaN(data[18]) || data[18 /* BBPA_so */] < 0.14638284f ? 
                     (Double.isNaN(data[18]) || data[18 /* BBPA_so */] < 0.13374873f ? 
                        22.25564f : 
                        28.333334f) : 
                     (Double.isNaN(data[17]) || data[17 /* HRPA_so */] < 0.028869161f ? 
                        20.0f : 
                        21.0f))) : 
             (Double.isNaN(data[15]) || data[15 /* OPS_so */] < 1.220448f ? 
                 (data[8 /* SOPA_fr */] < 0.15250456f ? 
                     (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 259.5f ? 
                        25.571428f : 
                        33.81818f) : 
                     (Double.isNaN(data[29]) || data[29 /* BBPA_jr */] < 0.14954413f ? 
                        22.892563f : 
                        28.47826f)) : 
                 (data[27 /* ISO_jr */] < 0.27186012f ? 
                    25.833334f : 
                    44.705883f))) : 
         (data[1 /* AVG_fr */] < 0.36693752f ? 
            32.5f : 
            56.875f));
    return pred;
  } // constant pool size = 62B, number of visited nodes = 15, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_2 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_2_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_2_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.8287588f ? 
         (Double.isNaN(data[15]) || data[15 /* OPS_so */] < 1.0848259f ? 
             (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 300.5f ? 
                 (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.53818536f ? 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 213.5f ? 
                        21.012146f : 
                        22.44186f) : 
                     (data[8 /* SOPA_fr */] < 0.09078974f ? 
                        30.588236f : 
                        23.761063f)) : 
                31.578947f) : 
             (Double.isNaN(data[3]) || data[3 /* SLG_fr */] < 0.58570755f ? 
                 (data[15 /* OPS_so */] < 1.1222967f ? 
                    33.333332f : 
                     (data[6 /* HRPA_fr */] < 0.012056161f ? 
                        31.5f : 
                        23.617022f)) : 
                 (data[30 /* SOPA_jr */] < 0.13043705f ? 
                    47.5f : 
                    31.764706f))) : 
         (Double.isNaN(data[20]) || data[20 /* KW_so */] < 0.84147054f ? 
            60.909092f : 
            33.0f));
    return pred;
  } // constant pool size = 46B, number of visited nodes = 11, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_3 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_3_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_3_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.8287588f ? 
         (Double.isNaN(data[14]) || data[14 /* SLG_so */] < 0.5556762f ? 
             (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 1.00784f ? 
                 (data[22 /* TPA(ADJ)_jr */] < 226.5f ? 
                     (data[9 /* KW_fr */] < 1.7390597f ? 
                        21.129032f : 
                        20.0f) : 
                     (data[8 /* SOPA_fr */] < 0.0816968f ? 
                        26.923077f : 
                        21.812866f)) : 
                 (Double.isNaN(data[15]) || data[15 /* OPS_so */] < 0.9640904f ? 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 244.5f ? 
                        22.647058f : 
                        29.333334f) : 
                    29.333334f)) : 
             (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 225.5f ? 
                 (Double.isNaN(data[19]) || data[19 /* SOPA_so */] < 0.15646724f ? 
                     (Double.isNaN(data[24]) || data[24 /* OBP_jr */] < 0.4720004f ? 
                        24.109589f : 
                        32.962963f) : 
                     (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.64340633f ? 
                        20.851065f : 
                        24.23077f)) : 
                 (data[28 /* HRPA_jr */] < 0.03218436f ? 
                    20.90909f : 
                     (data[14 /* SLG_so */] < 0.64863783f ? 
                        41.666668f : 
                        32.22222f)))) : 
        48.333332f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_4 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_4_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_4_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[24]) || data[24 /* OBP_jr */] < 0.5261988f ? 
         (data[27 /* ISO_jr */] < 0.17456023f ? 
             (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 1.00784f ? 
                 (Double.isNaN(data[11]) || data[11 /* TPA(ADJ)_so */] < 286.5f ? 
                     (data[18 /* BBPA_so */] < 0.072502084f ? 
                        20.0f : 
                        21.137442f) : 
                    27.272728f) : 
                 (data[7 /* BBPA_fr */] < 0.08752131f ? 
                    32.727272f : 
                     (Double.isNaN(data[17]) || data[17 /* HRPA_so */] < 0.017107818f ? 
                        20.0f : 
                        24.0f))) : 
             (Double.isNaN(data[31]) || data[31 /* KW_jr */] < 1.5610178f ? 
                 (Double.isNaN(data[11]) || data[11 /* TPA(ADJ)_so */] < 286.5f ? 
                     (data[26 /* OPS_jr */] < 0.9490471f ? 
                        21.5f : 
                        26.35f) : 
                     (data[12 /* AVG_so */] < 0.3630942f ? 
                        43.0f : 
                        26.666666f)) : 
                 (data[7 /* BBPA_fr */] < 0.067615196f ? 
                     (data[23 /* AVG_jr */] < 0.3353238f ? 
                        25.333334f : 
                        21.333334f) : 
                     (Double.isNaN(data[23]) || data[23 /* AVG_jr */] < 0.3771134f ? 
                        20.273973f : 
                        22.857143f)))) : 
         (data[32 /* XBH/AB_jr */] < 0.17904276f ? 
             (data[29 /* BBPA_jr */] < 0.14044097f ? 
                24.545454f : 
                 (Double.isNaN(data[32]) || data[32 /* XBH/AB_jr */] < 0.14528103f ? 
                    28.181818f : 
                    39.0f)) : 
             (data[11 /* TPA(ADJ)_so */] < 255.0f ? 
                41.25f : 
                57.5f)));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_5 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_5_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_5_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.8287588f ? 
         (data[27 /* ISO_jr */] < 0.17830138f ? 
             (Double.isNaN(data[11]) || data[11 /* TPA(ADJ)_so */] < 291.5f ? 
                 (Double.isNaN(data[7]) || data[7 /* BBPA_fr */] < 0.18050754f ? 
                     (data[0 /* TPA(ADJ)_fr */] < 26.5f ? 
                        26.0f : 
                        20.76412f) : 
                    25.0f) : 
                30.76923f) : 
             (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 259.5f ? 
                 (Double.isNaN(data[24]) || data[24 /* OBP_jr */] < 0.43748713f ? 
                     (Double.isNaN(data[29]) || data[29 /* BBPA_jr */] < 0.1318051f ? 
                        21.41593f : 
                        27.037037f) : 
                     (data[25 /* SLG_jr */] < 0.6017483f ? 
                        35.0f : 
                        25.060242f)) : 
                 (Double.isNaN(data[12]) || data[12 /* AVG_so */] < 0.416199f ? 
                     (data[8 /* SOPA_fr */] < 0.08814194f ? 
                        42.727272f : 
                        26.902655f) : 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 197.5f ? 
                        35.454544f : 
                        47.0f)))) : 
         (Double.isNaN(data[10]) || data[10 /* XBH/AB_fr */] < 0.14297915f ? 
            58.125f : 
            32.0f));
    return pred;
  } // constant pool size = 54B, number of visited nodes = 13, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_6 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_6_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_6_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[27]) || data[27 /* ISO_jr */] < 0.342288f ? 
         (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 260.5f ? 
             (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 0.983343f ? 
                 (Double.isNaN(data[27]) || data[27 /* ISO_jr */] < 0.25982216f ? 
                     (Double.isNaN(data[16]) || data[16 /* ISO_so */] < 0.24271728f ? 
                        20.985916f : 
                        23.333334f) : 
                    26.363636f) : 
                 (Double.isNaN(data[29]) || data[29 /* BBPA_jr */] < 0.12748717f ? 
                     (Double.isNaN(data[28]) || data[28 /* HRPA_jr */] < 0.06387438f ? 
                        21.927711f : 
                        27.333334f) : 
                     (data[17 /* HRPA_so */] < 0.023005143f ? 
                        30.64516f : 
                        24.375f))) : 
             (Double.isNaN(data[14]) || data[14 /* SLG_so */] < 0.62725484f ? 
                 (data[27 /* ISO_jr */] < 0.12737706f ? 
                     (Double.isNaN(data[4]) || data[4 /* OPS_fr */] < 0.82613146f ? 
                        20.0f : 
                        22.0f) : 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 227.5f ? 
                        25.432098f : 
                        31.666666f)) : 
                 (Double.isNaN(data[3]) || data[3 /* SLG_fr */] < 0.53756815f ? 
                     (Double.isNaN(data[14]) || data[14 /* SLG_so */] < 0.68281037f ? 
                        33.636364f : 
                        23.0f) : 
                    46.153847f))) : 
         (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 248.5f ? 
             (Double.isNaN(data[8]) || data[8 /* SOPA_fr */] < 0.18626566f ? 
                 (data[14 /* SLG_so */] < 0.64797497f ? 
                    30.0f : 
                    45.0f) : 
                 (data[31 /* KW_jr */] < 1.138311f ? 
                    28.0f : 
                    21.0f)) : 
            62.35294f));
    return pred;
  } // constant pool size = 74B, number of visited nodes = 18, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_7 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_7_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_7_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.8287588f ? 
         (Double.isNaN(data[14]) || data[14 /* SLG_so */] < 0.5556762f ? 
             (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 1.00784f ? 
                 (Double.isNaN(data[11]) || data[11 /* TPA(ADJ)_so */] < 272.5f ? 
                     (Double.isNaN(data[23]) || data[23 /* AVG_jr */] < 0.37129098f ? 
                        21.027191f : 
                        24.285715f) : 
                     (data[3 /* SLG_fr */] < 0.40857068f ? 
                        21.0f : 
                        29.23077f)) : 
                 (Double.isNaN(data[15]) || data[15 /* OPS_so */] < 0.9595979f ? 
                     (data[7 /* BBPA_fr */] < 0.055928044f ? 
                        31.818182f : 
                        23.461538f) : 
                     (data[11 /* TPA(ADJ)_so */] < 237.5f ? 
                        36.0f : 
                        25.833334f))) : 
             (data[25 /* SLG_jr */] < 0.5540761f ? 
                 (Double.isNaN(data[17]) || data[17 /* HRPA_so */] < 0.046191107f ? 
                     (data[14 /* SLG_so */] < 0.5864966f ? 
                        23.5f : 
                        20.0f) : 
                    25.555555f) : 
                 (data[10 /* XBH/AB_fr */] < 0.100663096f ? 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 197.5f ? 
                        24.23077f : 
                        31.034483f) : 
                     (data[29 /* BBPA_jr */] < 0.14044097f ? 
                        27.777779f : 
                        39.074074f)))) : 
         (data[20 /* KW_so */] < 0.8293375f ? 
            63.0f : 
            32.0f));
    return pred;
  } // constant pool size = 66B, number of visited nodes = 16, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_8 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_8_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_8_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 1.4010179f ? 
         (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 269.5f ? 
             (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.6049765f ? 
                 (Double.isNaN(data[16]) || data[16 /* ISO_so */] < 0.24639481f ? 
                     (Double.isNaN(data[1]) || data[1 /* AVG_fr */] < 0.41121846f ? 
                        21.31991f : 
                        25.454546f) : 
                     (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 0.94565964f ? 
                        23.333334f : 
                        31.17647f)) : 
                 (data[30 /* SOPA_jr */] < 0.10871224f ? 
                     (Double.isNaN(data[30]) || data[30 /* SOPA_jr */] < 0.0995732f ? 
                        29.661016f : 
                        44.615383f) : 
                     (Double.isNaN(data[12]) || data[12 /* AVG_so */] < 0.42799523f ? 
                        24.492754f : 
                        34.375f))) : 
             (data[26 /* OPS_jr */] < 1.1647146f ? 
                29.09091f : 
                50.909092f)) : 
        54.827587f);
    return pred;
  } // constant pool size = 42B, number of visited nodes = 10, static init size = 0B
}


class DRF_model_python_1633108695693_1_Forest_9 {
  public static void score0(double[] fdata, double[] preds) {
    preds[0] += DRF_model_python_1633108695693_1_Tree_9_class_0.score0(fdata);
  }
}
class DRF_model_python_1633108695693_1_Tree_9_class_0 {
  static final double score0(double[] data) {
    double pred =      (Double.isNaN(data[26]) || data[26 /* OPS_jr */] < 1.4010179f ? 
         (Double.isNaN(data[25]) || data[25 /* SLG_jr */] < 0.5534335f ? 
             (Double.isNaN(data[14]) || data[14 /* SLG_so */] < 0.62537116f ? 
                 (Double.isNaN(data[20]) || data[20 /* KW_so */] < 1.9698459f ? 
                     (data[22 /* TPA(ADJ)_jr */] < 171.5f ? 
                        24.444445f : 
                        21.551723f) : 
                     (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 248.5f ? 
                        20.194174f : 
                        21.904762f)) : 
                 (data[26 /* OPS_jr */] < 0.9249615f ? 
                    20.90909f : 
                    28.333334f)) : 
             (Double.isNaN(data[22]) || data[22 /* TPA(ADJ)_jr */] < 259.5f ? 
                 (data[31 /* KW_jr */] < 1.0122656f ? 
                     (Double.isNaN(data[21]) || data[21 /* XBH/AB_so */] < 0.1538989f ? 
                        25.692308f : 
                        36.25f) : 
                     (Double.isNaN(data[27]) || data[27 /* ISO_jr */] < 0.28180623f ? 
                        21.0f : 
                        24.897959f)) : 
                 (Double.isNaN(data[10]) || data[10 /* XBH/AB_fr */] < 0.1087447f ? 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 196.5f ? 
                        25.90909f : 
                        32.35294f) : 
                     (Double.isNaN(data[0]) || data[0 /* TPA(ADJ)_fr */] < 227.5f ? 
                        28.333334f : 
                        43.92857f)))) : 
        54.827587f);
    return pred;
  } // constant pool size = 58B, number of visited nodes = 14, static init size = 0B
}


