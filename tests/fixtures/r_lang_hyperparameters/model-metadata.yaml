name: drumpush-estimator
type: training
targetType: binary

# This part below defines the task's schema. Using this schema, on the fly,
# DataRobot will validate if the task requirements match neighboring tasks in a blueprint
# Note that it's only available for tasks, and not for inference models
# Every condition (and the whole section) is optional
typeSchema:
  # Specify what data types this task allows as input
  input_requirements:

    # specify what data types this task allows as input
    - field: data_types
      condition: IN # can be one of IN or NOT_IN
      value: # can be one or multiple of NUM, TXT, IMG, DATE, CAT, DATE_DURATION, COUNT_DICT, GEO
        - NUM

    # specify how many columns the task requires
    - field: number_of_columns
      condition: GREATER_THAN # can be one of EQUALS, IN, NOT_EQUALS, NOT_IN, GREATER_THAN, LESS_THAN, NOT_GREATER_THAN, NOT_LESS_THAN
      value: 1 # non-negative integer value

    # specify if the task accepts data in sparse format (CSR format for python, dgTMatrix for R)
    - field: sparse
      condition: EQUALS # only EQUALS is supported
      value: FORBIDDEN # one of: FORBIDDEN, SUPPORTED, REQUIRED

    # specify if the task accepts missing values
    - field: contains_missing
      condition: EQUALS # only EQUALS is supported
      value: FORBIDDEN # can be one of FORBIDDEN, SUPPORTED

# Hyperparameters are definitions of parameters that can be passed into a custom task's fit method. When constructing a
# blueprint using this task in DataRobot, you can specify specific values you want passed for each parameter. After the
# blueprint trains, you can also modify these parameters via advanced tuning. Below are examples of each possible
# parameter type.
hyperparameters:
  # int: Integer value, must provide a min and max. Default is optional, will use the min value if not provided
  - name: weight
    type: int
    min: 1
    max: 10
    default: 5

  # float: Float value, must provide a min and max. Default is optional, will use the min value if not provided
  - name: cost
    type: float
    min: 0.1
    max: 1
    default: 0.5

# select: Discrete set of unique values, similar to an enum. Default is optional, will use the first value if
# not provided. Not used in this example.
#  - name: optimiziation_metric
#    type: select
#    values:
#      - logloss
#      - AUC
#      - Accuracy
#    default: logloss

# multi: Parameter that can be of multiple types [int/float/select]. Default is optional, will use the first param
# type's default value, which for select, is the first entry, or for int/float, the min value. Not used in this example.
#  - name: missing_values_strategy
#    type: multi
#    values:
#      float:
#        min: -1000000.0
#        max: 1000000.0
#      select:
#        values:
#          - median
#          - mean
#          - most_frequent
#    default: median

# string: Unicode string. Default is optional, will be an empty string if not provided. Not used in this example.
#  - name: print_message
#    type: string
#    default: "hello world ðŸš€"