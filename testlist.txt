- tests/unit/datarobot_drum/drum/test_drum.py: OK
- tests/unit/datarobot_drum/drum/test_perf_testing.py: OK
- tests/unit/datarobot_drum/model_metadata/test_model_metadata.py: WTF???? - just that enum crap
- tests/unit/datarobot_drum/resource/test_drum_server_utils.py: OK
- tests/unit/datarobot_drum/drum/language_predictors/python_predictor/python_predictor.py: NOT STARTED
- tests/unit/datarobot_drum/drum/model_adapter.py: NOT STARTED




fit
    TEST_DRUM: OK
        tests calls `fit` correctly
        test calls run_test_predict correctly

    TEST_MODEL_ADAPTER: TODO
        - make ABC for model adapter
        - test datarobot_drum.drum.model_adapter.PythonModelAdapter.fit
        - maybe test R adapter can take in kwargs

    
run_test_predict:
    TEST_DRUM: OK
        tests calls datarobot_drum.drum.perf_testing.CMRunTests correctly

    TEST_PERF_TESTING: OK
        datarobot_drum.drum.perf_testing.CMRunTests
        this is in options passed in on init.  we've tested that options get correctly passed.

        - test correctly uses: DrumServerRun on
            - datarobot_drum.drum.perf_testing.CMRunTests.check_prediction_side_effects
            - datarobot_drum.drum.perf_testing.CMRunTests.check_transform_server

    TEST_DRUM_SERVER_UTILS: OK
        datarobot_drum.resource.drum_server_utils.DrumServerRun

        - test get_command
        - test uses get_command on __enter__
        - test uses new value passed in

predict/score
    TEST_DRUM: OK
    args passed to python predictor: done - passes correct params to mlpiper_configure as `params` which is dict
    
    TEST_PREDICTOR: TODO
    datarobot_drum.drum.language_predictors.python_predictor.python_predictor.PythonPredictor.mlpiper_configure
        tested that called with correct params

        need to test this calls model adapter correctly

    TEST_MODEL_ADAPTER: TODO
        - make ABC for model adapter
        - test  datarobot_drum.drum.model_adapter.PythonModelAdapter.load_model_from_artifact
        - maybe test R adapter can take in kwargs
