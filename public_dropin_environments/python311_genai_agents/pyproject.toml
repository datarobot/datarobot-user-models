[project]

name = "DockerContext"
version = "0.1.0"
description = "Implementation of DockerContext"
readme = "README.md"
requires-python = ">=3.10, <3.13"
dependencies = [
    "annotated-types>=0.7.0",
    "click>=8.1.8",
    "datarobot-drum>=1.17.3",
    "datarobot-mlops>=11.1.0",
    "datarobot-predict>=1.13.2",
    "dotenv>=0.9.9",
    "langchain-community>=0.3.27",
    "langchain-mcp-adapters>=0.1.9",
    "langchain>=0.3.23",
    "legacy-cgi>=2.6.3",
    "litellm>=1.72.1",
    "mcp>=1.11.0",
    "multidict>=6.5.0",
    "onnxruntime>=1.22.0,<1.23.0",
    "openai>=1.76.2",
    "opentelemetry-api>=1.33.0,<2.0.0",
    "opentelemetry-instrumentation-aiohttp-client>=0.54b0",
    "opentelemetry-instrumentation-httpx>=0.54b0",
    "opentelemetry-instrumentation-langchain>=0.40.5",
    "opentelemetry-instrumentation-openai>=0.40.5",
    "opentelemetry-instrumentation-requests>=0.54b0",
    "opentelemetry-sdk>=1.33.0",
    "python-dotenv>=1.1.0",
    "ragas @ git+https://github.com/explodinggradients/ragas@5d59549ad5ef511f621502c563bc55ac5aeb9188#subdirectory=ragas",
    # pyarrow==21.0.0 breaks the current ragas version https://github.com/apache/arrow/issues/47155
    "pyarrow<21.0.0",
    "requests>=2.32.4",
    "traceloop-sdk>=0.40.2",
    "uvicorn>=0.32.0",
    "datarobot[auth]>=3.8.2",
    "datarobot-moderations>=11.2.3",

    # Docker image requirements (These MUST be included to avoid docker conflicts)
    "ecs-logging>=2.2.0",
    "fastapi[all]==0.115.14",
    "ipykernel<6.29.0",
    "jupyter-client>=8.6.3",
    "jupyter-core>=5.8.1",
    "jupyter-kernel-gateway>=3.0.1",
    "mistune>=3.1.4",
    "numpy>=1.26.4",
    "pandas>=2.2.3",
    "psutil==5.9.8",
    "setuptools>=80.9.0",
    "ujson<5.8.0",
    "uwsgi>=2.0.30",

    # Agent framework requirements
    "crewai>=0.177.0",
    "crewai-tools>=0.69.0",
    "opentelemetry-instrumentation-crewai>=0.40.5",
    "pybase64>=1.4.2",
    "langgraph>=0.4.10",
    "langgraph-prebuilt>=0.2.3",
    "llama-index<0.14.0",
    "llama-index-core<0.14.0",
    "llama-index-llms-langchain>=0.6.1",
    "llama-index-llms-litellm>=0.4.1",
    "llama-index-llms-openai>=0.3.38",
    "opentelemetry-instrumentation-llamaindex>=0.40.5",
    "pypdf>=6.0.0",
    "logfire>=4.6.0",
    "pydantic-ai>=1.0.5",
]

[project.optional-dependencies]
dev = [
    "mypy>=1.15.0",
    "pre-commit>=4.2.0",
    "pydantic>=2.6.1",
    "pytest-cov>=6.1.1",
    "pytest>=7.4.0",
    "requests-mock>=1.12.1",
    "ruff>=0.12.0",
    "types-requests>=2.32.4.20250913",
    "yamlfix>=1.17.0",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
pythonpath = ["custom_model"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pycache__",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "docker_context",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.yamlfix]
allow_duplicate_keys = true
line_length = 120

# Pydantic plugin must be disabled with llamaindex, see https://github.com/python/mypy/issues/15927
[tool.mypy]
strict = true
python_version = "3.11"

plugins = "pydantic.mypy"

exclude = """(?x)(
    output/ # exclude files starting with "output"
    | deployment_.*/
    | docker_context/
    | include/   # or files starting with "include."
    | venv/
    | .venv/
    | .cache
    | e2e/
    | tests/
  )"""
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
enable_error_code = "ignore-without-code"
implicit_reexport = true
ignore_missing_imports = true
no_implicit_optional = true
show_column_numbers = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "datarobot.*"
implicit_reexport = true
