pipeline:
  name: python3-xgboost_public-dropin-environments
  identifier: python3xgboost_publicdropinenvironments
  projectIdentifier: datarobotusermodels
  orgIdentifier: Custom_Models
  tags:
    reconcile dependencies: ""
  properties:
    ci:
      codebase:
        connectorRef: account.svc_harness_git1
        repoName: datarobot-user-models
        build: <+input>
  stages:
    - stage:
        name: reconcile_python_dependencies
        identifier: reconcile_python_dependencies
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          buildIntelligence:
            enabled: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.cigeneral
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: Run
                  name: reconcile_dependencies
                  identifier: reconcile_dependencies
                  spec:
                    connectorRef: account.dockerhub_datarobot_read
                    image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                    shell: Bash
                    command: |-
                      # Navigate to environment directory
                      ENV_DIR="public_dropin_environments/python3_xgboost"
                      cd "$ENV_DIR" || exit 1

                      # Ensure Git is installed
                      if ! command -v git &> /dev/null; then
                          echo "Git is not installed. Installing..."
                          apt-get update && apt-get install -y git
                      fi

                      # Configure Git
                      git config --global user.name "svc-harness-git2"
                      git config --global user.email "svc-harness-git2@datarobot.com"
                      git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                      git config --global --add safe.directory /harness  # Mark /harness as a safe directory

                      # Run dependency reconciliation if there are file changes
                      if ! git diff --quiet master -- .; then
                          echo "Changes detected in $ENV_DIR. Running reconciliation..."
                          bash ../../tools/reconcile_dependencies.sh
                      else
                          echo "No changes detected. Skipping reconciliation."
                          exit 0  # Exit early if no changes
                      fi

                      # Commit and push changes if any
                      if [[ -n $(git status --porcelain) ]]; then
                          git add .
                          git commit -m "Reconcile dependencies for $ENV_DIR"
                          git config pull.rebase true
                          git pull origin "$(git branch --show-current)" --rebase
                          git push --set-upstream origin "$(git branch --show-current)"
                      else
                          echo "No changes detected in Git."
                      fi
                    envVariables:
                      GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                    resources:
                      limits:
                        memory: 5Gi
                  description: Run the tools/reconcile_dependencies.sh script to auto-generate requirements.txt file base on its requirements.in file.
