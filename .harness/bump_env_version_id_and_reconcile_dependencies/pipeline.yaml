pipeline:
  name: bump_env_version_id_and_reconcile_dependencies
  identifier: bump_env_version_id_and_reconcile_dependencies
  projectIdentifier: datarobotusermodels
  orgIdentifier: Custom_Models
  tags: {}
  stages:
    - stage:
        name: reconcile_python_dependencies
        identifier: reconcile_python_dependencies
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: true
          buildIntelligence:
            enabled: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: account.cigeneral
              namespace: harness-delegate-ng
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - parallel:
                  - step:
                      type: Run
                      name: python3-keras_public-dropin-environments
                      identifier: python3keras_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python3_keras"
                          cd "$ENV_DIR" || exit 1

                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi

                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory

                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi

                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python3_keras
                  - step:
                      type: Run
                      name: python3-onnx_public-dropin-environments
                      identifier: python3onnx_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python3_onnx"
                          cd "$ENV_DIR" || exit 1

                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi

                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory

                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi

                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python3_onnx
                  - step:
                      type: Run
                      name: python3-pmml_public-dropin-environments
                      identifier: python3pmml_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:debian11-py3.9-jre11.0.16-drum1.13.0-mlops9.2.8
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python3_pmml"
                          cd "$ENV_DIR" || exit 1

                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi

                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory

                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi

                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python3_pmml
                  - step:
                      type: Run
                      name: python3-pytorch_public-dropin-environments
                      identifier: python3pytorch_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python3_pytorch"
                          cd "$ENV_DIR" || exit 1

                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi

                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory

                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi

                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python3_pytorch
                  - step:
                      type: Run
                      name: python3-sklearn_public-dropin-environments
                      identifier: python3sklearn_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python3_sklearn"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python3_sklearn
                  - step:
                      type: Run
                      name: python3-xgboost_public-dropin-environments
                      identifier: python3xgboost_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python3_xgboost"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python3_xgboost
                  - step:
                      type: Run
                      name: python311-genai_public-dropin-environments
                      identifier: python311genai_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/python311_genai"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/python311_genai
                  - step:
                      type: Run
                      name: r-lang_public-dropin-environments
                      identifier: rlang_publicdropinenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base-r:ubuntu22.04-r4.2.2-py3.10-jre11
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_environments/r_lang"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_environments/r_lang
                  - step:
                      type: Run
                      name: nim-embedqa_public-dropin-gpu-environments
                      identifier: nimembedqa_publicdropingpuenvironments
                      spec:
                        connectorRef: nvcrio
                        image: nvcr.io/nim/nvidia/llama-3.2-nv-embedqa-1b-v2:1.3.1
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/nim_embedqa"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/nim_embedqa
                  - step:
                      type: Run
                      name: nim-llama-8b_public-dropin-gpu-environments
                      identifier: nimllama8b_publicdropingpuenvironments
                      spec:
                        connectorRef: nvcrio
                        image: nvcr.io/nim/meta/llama-3.1-8b-instruct:1.3.3
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/nim_llama_8b"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/nim_llama_8b
                  - step:
                      type: Run
                      name: nim-llama-70b_public-dropin-gpu-environments
                      identifier: nimllama70b_publicdropingpuenvironments
                      spec:
                        connectorRef: nvcrio
                        image: nvcr.io/nim/meta/llama-3.1-70b-instruct:1.3.3
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/nim_llama_70b"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/nim_llama_70b
                  - step:
                      type: Run
                      name: nim-qwen-7b_public-dropin-gpu-environments
                      identifier: nimqwen7b_publicdropingpuenvironments
                      spec:
                        connectorRef: nvcrio
                        image: nvcr.io/nim/qwen/qwen-2.5-7b-instruct:1.0.0
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/nim_qwen_7b"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/nim_qwen_7b
                  - step:
                      type: Run
                      name: nim-sidecar_public-dropin-gpu-environments
                      identifier: nimsidecar_publicdropingpuenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: datarobot/dropin-env-base:1.0.0-python-3.11.11-slim-bookworm
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/nim_sidecar"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/nim_sidecar
                  - step:
                      type: Run
                      name: triton-server_public-dropin-gpu-environments
                      identifier: tritonserver_publicdropingpuenvironments
                      spec:
                        connectorRef: nvcrio
                        image: nvcr.io/nvidia/tritonserver:24.01-py3
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/triton_server"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/triton_server
                  - step:
                      type: Run
                      name: vllm_public-dropin-gpu-environments
                      identifier: vllm_publicdropingpuenvironments
                      spec:
                        connectorRef: account.dockerhub_datarobot_read
                        image: vllm/vllm-openai:v0.6.6.post1
                        shell: Bash
                        command: |-
                          # Navigate to environment directory
                          ENV_DIR="public_dropin_gpu_environments/vllm"
                          cd "$ENV_DIR" || exit 1
                          
                          # Ensure Git is installed
                          if ! command -v git &> /dev/null; then
                              echo "Git is not installed. Installing..."
                              apt-get update && apt-get install -y git
                          fi
                          
                          # Configure Git
                          git config --global user.name "svc-harness-git2"
                          git config --global user.email "svc-harness-git2@datarobot.com"
                          git config --global url."https://${GITHUB_ACCESS_TOKEN}@github.com/".insteadOf "https://github.com/"
                          git config --global --add safe.directory /harness  # Mark /harness as a safe directory
                          
                          # Run dependency reconciliation if there are file changes
                          if ! git diff --quiet master -- .; then
                              echo "Changes detected in $ENV_DIR. Running reconciliation..."
                              bash ../../tools/reconcile_dependencies.sh
                          else
                              echo "No changes detected. Skipping reconciliation."
                              exit 0  # Exit early if no changes
                          fi
                          
                          # Commit and push changes if any
                          if [[ -n $(git status --porcelain) ]]; then
                              git add .
                              git commit -m "Reconcile dependencies for $ENV_DIR"
                              git config pull.rebase true
                              git pull origin "$(git branch --show-current)" --rebase
                              git push --set-upstream origin "$(git branch --show-current)"
                          else
                              echo "No changes detected in Git."
                          fi
                        envVariables:
                          GITHUB_ACCESS_TOKEN: <+secrets.getValue("account.githubpatsvcharnessgit2")>
                        resources:
                          limits:
                            memory: 5Gi
                      description: Reconcile dependencies for public_dropin_gpu_environments/vllm
  properties:
    ci:
      codebase:
        connectorRef: account.svc_harness_git1
        repoName: datarobot-user-models
        build: <+input>
